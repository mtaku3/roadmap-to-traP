generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model AppConfig {
  id           String     @id @default(uuid())
  schoolYear   SchoolYear @relation(fields: [schoolYearId], references: [id])
  schoolYearId String
}

model User {
  id          String     @id @default(uuid())
  name        String
  displayName String
  iconFileId  String
  Workshop    Workshop[]
}

model SchoolYear {
  id        String      @id @default(uuid())
  name      String
  value     Int         @unique
  Workshop  Workshop[]
  AppConfig AppConfig[]
}

model WorkshopDependency {
  id                    String   @id @default(uuid())
  workshop              Workshop @relation(name: "from", fields: [workshopId], references: [id])
  workshopId            String
  workshopDependentOn   Workshop @relation(name: "to", fields: [workshopDependentOnId], references: [id])
  workshopDependentOnId String

  @@unique([workshopId, workshopDependentOnId])
}

model Workshop {
  id                   String               @id @default(uuid())
  name                 String
  description          String
  courses              Course[]
  workshopsDependentOn WorkshopDependency[] @relation(name: "from")
  workshopsReliedOn    WorkshopDependency[] @relation(name: "to")
  schoolYear           SchoolYear           @relation(fields: [schoolYearId], references: [id])
  schoolYearId         String
  user                 User                 @relation(fields: [userId], references: [id])
  userId               String
}

model Course {
  id          String   @id @default(uuid())
  name        String
  description String
  order       Int
  workshop    Workshop @relation(fields: [workshopId], references: [id])
  workshopId  String
  events      Event[]
}

model Event {
  id       String @id
  course   Course @relation(fields: [courseId], references: [id])
  courseId String
}
